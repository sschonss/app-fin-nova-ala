rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    // Games collection
    match /games/{gameId} {
      allow read, create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['attendance']) &&
        request.resource.data.attendance.diff(resource.data.attendance).affectedKeys()
          .hasOnly([request.auth.uid]);
      allow delete: if false; // No one can delete games
    }

    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated();
      // Users can create their own transactions
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      // Admins can update/delete any transaction, users can delete their own
      allow update: if isAdmin();
      allow delete: if isAdmin() || (
        isAuthenticated() && 
        resource.data.userId == request.auth.uid
      );
    }

    // Balance collection
    match /balance/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || isAdmin()
      );
      // Only admins can modify balance
      allow write: if isAdmin();
    }
  }
}